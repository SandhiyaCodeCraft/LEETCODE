python
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        prefix = 1
        suffix = 1
        maximum = float('-inf')-----------------------------------------#taking min_value,for max->float('inf')
        for i in range(len(nums)):
            prefix = prefix*nums[i]
            suffix = suffix*nums[len(nums)-1-i]
            maximum = max(max(prefix,suffix),maximum)
            if prefix == 0:
                prefix = 1
            if suffix == 0:
                suffix = 1
        return maximum

java:
import static java.lang.Math.max;
class Solution {
    public int maxProduct(int[] nums) {
        int p=1;
        int s=1;
        int m=Integer.MIN_VALUE;
        for(int i=0;i<nums.length;i++){
            p=p*nums[i];
            s=s*nums[nums.length-1-i];
            m=max(max(p,s),m);
            if(p==0){
                p=1;
            }
            if(s==0){
                s=1;
            }
        }
        return m;
    }
}
